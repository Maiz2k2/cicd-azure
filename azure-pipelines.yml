trigger:
- main  # Trigger on your main branch (or whichever branch you prefer)

pool:
  name: 'aks-pool'  # Your self-hosted AKS pool

variables:
  registry: 'maizmazin/vproappazure'  # Docker registry name
  registryCredential: 'dockerhub'    # Docker service connection name
  imageTag: 'V$(Build.BuildId)'      # Use build ID as image tag
  mavenVersion: '3.8.1'              # Maven version to install
  helmVersion: '3.8.2'               # Helm version to install

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - script: |
        # Install Maven
        echo "Installing Maven..."
        wget https://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz
        tar -xvzf apache-maven-${MAVEN_VERSION}-bin.tar.gz
        export MAVEN_HOME=$(pwd)/apache-maven-${MAVEN_VERSION}
        export PATH=$MAVEN_HOME/bin:$PATH
        mvn -v  # Verify Maven version
      displayName: 'Install and Verify Maven'

    - script: mvn clean install -DskipTests
      displayName: 'Maven Clean Install'

    - task: PublishBuildArtifacts@1
      displayName: 'Archive War Artifacts'
      inputs:
        pathToPublish: '**/target/*.war'
        artifactName: 'war-files'

- stage: UnitTests
  jobs:
  - job: UnitTests
    steps:
    - script: mvn test
      displayName: 'Run Unit Tests'

- stage: IntegrationTests
  jobs:
  - job: IntegrationTests
    steps:
    - script: mvn verify -DskipUnitTests
      displayName: 'Run Integration Tests'

- stage: CodeAnalysisCheckstyle
  jobs:
  - job: CodeAnalysisCheckstyle
    steps:
    - script: mvn checkstyle:checkstyle
      displayName: 'Run Checkstyle Analysis'

- stage: BuildAndPushDockerImage
  jobs:
  - job: BuildAndPushDockerImage
    steps:
    - script: |
        # Install Docker
        echo "Installing Docker..."
        curl -fsSL https://get.docker.com | sh
        sudo usermod -aG docker $(whoami)  # Add user to docker group (to run docker without sudo)
        sudo systemctl enable --now docker
        docker --version  # Verify Docker installation

        # Build Docker Image
        docker build -t $(registry):$(imageTag) .
      displayName: 'Build Docker Image'

    - script: |
        docker push $(registry):$(imageTag)
        docker push $(registry):latest
      displayName: 'Push Docker Image'

- stage: KubernetesDeploy
  jobs:
  - job: KubernetesDeploy
    pool:
      name: 'aks-pool'
    steps:
    - script: |
        # Install Azure CLI
        echo "Installing Azure CLI..."
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        az --version  # Verify Azure CLI installation

        # Install Helm
        echo "Installing Helm..."
        wget https://get.helm.sh/helm-v$(helmVersion)-linux-amd64.tar.gz
        tar -zxvf helm-v$(helmVersion)-linux-amd64.tar.gz
        sudo mv linux-amd64/helm /usr/local/bin/helm
        helm version  # Verify Helm installation

        # Configure kubectl
        echo "Configuring kubectl..."
        az aks get-credentials --resource-group aks-demo-rg --name aks-demo-cluster
      displayName: 'Install Azure CLI, Helm, and Configure kubectl'

    - script: |
        helm upgrade --install --force vprofile-stack helm/vprofilecharts --set appimage=$(registry):$(imageTag) --namespace prod
      displayName: 'Deploy to Kubernetes with Helm'
