trigger:
  - main  # Trigger on your main branch

pool:
  name: 'aks-pool'  # Your self-hosted AKS pool

variables:
  registry: 'maizmazin/vproappazure'  # Docker registry name
  registryCredential: 'dockerhub'     # Docker service connection name
  imageTag: 'V$(Build.BuildId)'       # Use build ID as image tag
  gitHubRepo: 'Maiz2k2/cicd-azure'   # GitHub repository name (replace with your actual repo)

stages:
  - stage: Build
    jobs:
      - job: Build
        steps:
          - script: |
              echo "##vso[task.setvariable variable=JAVA_HOME]$(JAVA_HOME_17_X64)"
              echo "##vso[task.setvariable variable=PATH]$(JAVA_HOME_17_X64)/bin:$(PATH)"
            displayName: "Set Java 17 Version"

          - task: Maven@4
            inputs:
              azureSubscription: 'aks-service-conn'
              mavenPomFile: 'pom.xml'
              publishJUnitResults: false
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.17'
              mavenVersionOption: 'Default'
              mavenAuthenticateFeed: false
              sonarQubeRunAnalysis: false
            displayName: 'Set up Maven'

          - script: mvn clean install -DskipTests
            displayName: 'Build Project with Maven'

          - script: |
              echo "Uploading WAR file to GitHub repository"
              git config --global user.name "Azure DevOps"
              git config --global user.email "maiz.mazin@gmail.com"
              git clone https://$(gitHubToken)@github.com/$(gitHubRepo).git
              cd $(Build.SourcesDirectory)
              mkdir -p $(Build.SourcesDirectory)/$(gitHubRepo)/dist  # Create 'dist' folder if not exists
              cp target/vprofile-v2.war $(Build.SourcesDirectory)/$(gitHubRepo)/dist/vprofile-v2.war  # Copy WAR to dist folder
              cd $(Build.SourcesDirectory)/$(gitHubRepo)
              git add .
              git commit -m "Add vprofile-v2.war to dist folder"
              git push
            displayName: 'Upload WAR file to GitHub Repo'

  - stage: BuildAndPushDockerImage
    jobs:
      - job: BuildAndPushDockerImage
        steps:
          - script: |
              # Clone the GitHub repo to fetch the WAR file for Docker build
              git clone https://$(gitHubToken)@github.com/$(gitHubRepo).git /tmp/repo
              cp /tmp/repo/dist/vprofile-v2.war .

              # Build Docker Image using the Dockerfile located at a custom location
              docker build -f /home/azureuser/myagent/_work/1/s/Dockerfile -t $(registry):$(imageTag) -t $(registry):latest /home/azureuser/myagent/_work/1/s
            displayName: 'Build Docker Image'

          - script: |
              echo $(DOCKER_PASSWORD) | docker login --username $(DOCKER_USERNAME) --password-stdin
              docker push $(registry):$(imageTag)
              docker push $(registry):latest
            displayName: 'Push Docker Image'

  - stage: KubernetesDeploy
    jobs:
      - job: KubernetesDeploy
        steps:
          - task: AzureCLI@2
            displayName: 'Configure kubectl'
            inputs:
              azureSubscription: 'aks-service-conn'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az aks get-credentials --resource-group aks-demo-rg --name aks-demo-cluster

          - script: |
              helm upgrade --install --force vprofile-stack helm/vprofilecharts --set appimage=$(registry):$(imageTag) --namespace prod
            displayName: 'Deploy to Kubernetes with Helm'
